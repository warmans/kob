// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc.proto

/*
Package rpc is a generated protocol buffer package.

It is generated from these files:
	rpc.proto

It has these top-level messages:
	ListEntriesRequest
	GetEntryRequest
	CreateEntryRequest
	UpdateEntryRequest
	EntryList
	ListEntryCommentsRequest
	CommentList
	Entry
	Author
	CreateEntryCommentRequest
	UpdateEntryCommentRequest
	Comment
	Tag
	JWT
	AuthURL
	ActivityList
	Activity
*/
package rpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "google.golang.org/genproto/googleapis/api/annotations"
import google_protobuf1 "github.com/golang/protobuf/ptypes/empty"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Activity_Action int32

const (
	Activity_CREATE_ENTRY Activity_Action = 0
	Activity_UPDATE_ENTRY Activity_Action = 1
)

var Activity_Action_name = map[int32]string{
	0: "CREATE_ENTRY",
	1: "UPDATE_ENTRY",
}
var Activity_Action_value = map[string]int32{
	"CREATE_ENTRY": 0,
	"UPDATE_ENTRY": 1,
}

func (x Activity_Action) String() string {
	return proto.EnumName(Activity_Action_name, int32(x))
}
func (Activity_Action) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{16, 0} }

type ListEntriesRequest struct {
	Page       int64  `protobuf:"varint,1,opt,name=page" json:"page,omitempty"`
	NumPerPage int64  `protobuf:"varint,2,opt,name=num_per_page,json=numPerPage" json:"num_per_page,omitempty"`
	Keyword    string `protobuf:"bytes,3,opt,name=keyword" json:"keyword,omitempty"`
}

func (m *ListEntriesRequest) Reset()                    { *m = ListEntriesRequest{} }
func (m *ListEntriesRequest) String() string            { return proto.CompactTextString(m) }
func (*ListEntriesRequest) ProtoMessage()               {}
func (*ListEntriesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ListEntriesRequest) GetPage() int64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *ListEntriesRequest) GetNumPerPage() int64 {
	if m != nil {
		return m.NumPerPage
	}
	return 0
}

func (m *ListEntriesRequest) GetKeyword() string {
	if m != nil {
		return m.Keyword
	}
	return ""
}

type GetEntryRequest struct {
	Id int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetEntryRequest) Reset()                    { *m = GetEntryRequest{} }
func (m *GetEntryRequest) String() string            { return proto.CompactTextString(m) }
func (*GetEntryRequest) ProtoMessage()               {}
func (*GetEntryRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetEntryRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

type CreateEntryRequest struct {
	Title    string   `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Content  string   `protobuf:"bytes,3,opt,name=content" json:"content,omitempty"`
	AuthorId string   `protobuf:"bytes,4,opt,name=author_id,json=authorId" json:"author_id,omitempty"`
	TagIds   []string `protobuf:"bytes,5,rep,name=tag_ids,json=tagIds" json:"tag_ids,omitempty"`
}

func (m *CreateEntryRequest) Reset()                    { *m = CreateEntryRequest{} }
func (m *CreateEntryRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateEntryRequest) ProtoMessage()               {}
func (*CreateEntryRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CreateEntryRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *CreateEntryRequest) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *CreateEntryRequest) GetAuthorId() string {
	if m != nil {
		return m.AuthorId
	}
	return ""
}

func (m *CreateEntryRequest) GetTagIds() []string {
	if m != nil {
		return m.TagIds
	}
	return nil
}

type UpdateEntryRequest struct {
	Id       int64    `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Title    string   `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Content  string   `protobuf:"bytes,3,opt,name=content" json:"content,omitempty"`
	AuthorId string   `protobuf:"bytes,4,opt,name=author_id,json=authorId" json:"author_id,omitempty"`
	TagIds   []string `protobuf:"bytes,5,rep,name=tag_ids,json=tagIds" json:"tag_ids,omitempty"`
}

func (m *UpdateEntryRequest) Reset()                    { *m = UpdateEntryRequest{} }
func (m *UpdateEntryRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateEntryRequest) ProtoMessage()               {}
func (*UpdateEntryRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *UpdateEntryRequest) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *UpdateEntryRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *UpdateEntryRequest) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *UpdateEntryRequest) GetAuthorId() string {
	if m != nil {
		return m.AuthorId
	}
	return ""
}

func (m *UpdateEntryRequest) GetTagIds() []string {
	if m != nil {
		return m.TagIds
	}
	return nil
}

type EntryList struct {
	Entries    []*Entry `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
	NumResults int64    `protobuf:"varint,2,opt,name=num_results,json=numResults" json:"num_results,omitempty"`
}

func (m *EntryList) Reset()                    { *m = EntryList{} }
func (m *EntryList) String() string            { return proto.CompactTextString(m) }
func (*EntryList) ProtoMessage()               {}
func (*EntryList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *EntryList) GetEntries() []*Entry {
	if m != nil {
		return m.Entries
	}
	return nil
}

func (m *EntryList) GetNumResults() int64 {
	if m != nil {
		return m.NumResults
	}
	return 0
}

type ListEntryCommentsRequest struct {
	EntryId string `protobuf:"bytes,1,opt,name=entry_id,json=entryId" json:"entry_id,omitempty"`
}

func (m *ListEntryCommentsRequest) Reset()                    { *m = ListEntryCommentsRequest{} }
func (m *ListEntryCommentsRequest) String() string            { return proto.CompactTextString(m) }
func (*ListEntryCommentsRequest) ProtoMessage()               {}
func (*ListEntryCommentsRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ListEntryCommentsRequest) GetEntryId() string {
	if m != nil {
		return m.EntryId
	}
	return ""
}

type CommentList struct {
	Comments []*Comment `protobuf:"bytes,1,rep,name=comments" json:"comments,omitempty"`
}

func (m *CommentList) Reset()                    { *m = CommentList{} }
func (m *CommentList) String() string            { return proto.CompactTextString(m) }
func (*CommentList) ProtoMessage()               {}
func (*CommentList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *CommentList) GetComments() []*Comment {
	if m != nil {
		return m.Comments
	}
	return nil
}

type Entry struct {
	Id          int64   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Title       string  `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	Content     string  `protobuf:"bytes,3,opt,name=content" json:"content,omitempty"`
	Author      *Author `protobuf:"bytes,4,opt,name=author" json:"author,omitempty"`
	Tags        []*Tag  `protobuf:"bytes,5,rep,name=tags" json:"tags,omitempty"`
	CreatedDate string  `protobuf:"bytes,6,opt,name=created_date,json=createdDate" json:"created_date,omitempty"`
	UpdatedDate string  `protobuf:"bytes,7,opt,name=updated_date,json=updatedDate" json:"updated_date,omitempty"`
}

func (m *Entry) Reset()                    { *m = Entry{} }
func (m *Entry) String() string            { return proto.CompactTextString(m) }
func (*Entry) ProtoMessage()               {}
func (*Entry) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *Entry) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Entry) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Entry) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

func (m *Entry) GetAuthor() *Author {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *Entry) GetTags() []*Tag {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *Entry) GetCreatedDate() string {
	if m != nil {
		return m.CreatedDate
	}
	return ""
}

func (m *Entry) GetUpdatedDate() string {
	if m != nil {
		return m.UpdatedDate
	}
	return ""
}

type Author struct {
	Id            int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Sub           string `protobuf:"bytes,2,opt,name=sub" json:"sub,omitempty"`
	Name          string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	GivenName     string `protobuf:"bytes,4,opt,name=given_name,json=givenName" json:"given_name,omitempty"`
	FamilyName    string `protobuf:"bytes,5,opt,name=family_name,json=familyName" json:"family_name,omitempty"`
	Profile       string `protobuf:"bytes,6,opt,name=profile" json:"profile,omitempty"`
	Picture       string `protobuf:"bytes,7,opt,name=picture" json:"picture,omitempty"`
	Email         string `protobuf:"bytes,8,opt,name=email" json:"email,omitempty"`
	EmailVerified string `protobuf:"bytes,9,opt,name=email_verified,json=emailVerified" json:"email_verified,omitempty"`
	Gender        string `protobuf:"bytes,10,opt,name=gender" json:"gender,omitempty"`
}

func (m *Author) Reset()                    { *m = Author{} }
func (m *Author) String() string            { return proto.CompactTextString(m) }
func (*Author) ProtoMessage()               {}
func (*Author) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *Author) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Author) GetSub() string {
	if m != nil {
		return m.Sub
	}
	return ""
}

func (m *Author) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Author) GetGivenName() string {
	if m != nil {
		return m.GivenName
	}
	return ""
}

func (m *Author) GetFamilyName() string {
	if m != nil {
		return m.FamilyName
	}
	return ""
}

func (m *Author) GetProfile() string {
	if m != nil {
		return m.Profile
	}
	return ""
}

func (m *Author) GetPicture() string {
	if m != nil {
		return m.Picture
	}
	return ""
}

func (m *Author) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Author) GetEmailVerified() string {
	if m != nil {
		return m.EmailVerified
	}
	return ""
}

func (m *Author) GetGender() string {
	if m != nil {
		return m.Gender
	}
	return ""
}

type CreateEntryCommentRequest struct {
	EntryId  string `protobuf:"bytes,1,opt,name=entry_id,json=entryId" json:"entry_id,omitempty"`
	AuthorId string `protobuf:"bytes,2,opt,name=author_id,json=authorId" json:"author_id,omitempty"`
	Content  string `protobuf:"bytes,3,opt,name=content" json:"content,omitempty"`
}

func (m *CreateEntryCommentRequest) Reset()                    { *m = CreateEntryCommentRequest{} }
func (m *CreateEntryCommentRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateEntryCommentRequest) ProtoMessage()               {}
func (*CreateEntryCommentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *CreateEntryCommentRequest) GetEntryId() string {
	if m != nil {
		return m.EntryId
	}
	return ""
}

func (m *CreateEntryCommentRequest) GetAuthorId() string {
	if m != nil {
		return m.AuthorId
	}
	return ""
}

func (m *CreateEntryCommentRequest) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type UpdateEntryCommentRequest struct {
	EntryId string `protobuf:"bytes,1,opt,name=entry_id,json=entryId" json:"entry_id,omitempty"`
	Id      string `protobuf:"bytes,2,opt,name=id" json:"id,omitempty"`
	Content string `protobuf:"bytes,3,opt,name=content" json:"content,omitempty"`
}

func (m *UpdateEntryCommentRequest) Reset()                    { *m = UpdateEntryCommentRequest{} }
func (m *UpdateEntryCommentRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateEntryCommentRequest) ProtoMessage()               {}
func (*UpdateEntryCommentRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *UpdateEntryCommentRequest) GetEntryId() string {
	if m != nil {
		return m.EntryId
	}
	return ""
}

func (m *UpdateEntryCommentRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateEntryCommentRequest) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type Comment struct {
	Id          int64   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Author      *Author `protobuf:"bytes,2,opt,name=author" json:"author,omitempty"`
	CreatedDate string  `protobuf:"bytes,3,opt,name=created_date,json=createdDate" json:"created_date,omitempty"`
	Content     string  `protobuf:"bytes,4,opt,name=content" json:"content,omitempty"`
}

func (m *Comment) Reset()                    { *m = Comment{} }
func (m *Comment) String() string            { return proto.CompactTextString(m) }
func (*Comment) ProtoMessage()               {}
func (*Comment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *Comment) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Comment) GetAuthor() *Author {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *Comment) GetCreatedDate() string {
	if m != nil {
		return m.CreatedDate
	}
	return ""
}

func (m *Comment) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

type Tag struct {
	Id    int64  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Label string `protobuf:"bytes,2,opt,name=label" json:"label,omitempty"`
}

func (m *Tag) Reset()                    { *m = Tag{} }
func (m *Tag) String() string            { return proto.CompactTextString(m) }
func (*Tag) ProtoMessage()               {}
func (*Tag) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *Tag) GetId() int64 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Tag) GetLabel() string {
	if m != nil {
		return m.Label
	}
	return ""
}

type JWT struct {
	Code string `protobuf:"bytes,1,opt,name=code" json:"code,omitempty"`
}

func (m *JWT) Reset()                    { *m = JWT{} }
func (m *JWT) String() string            { return proto.CompactTextString(m) }
func (*JWT) ProtoMessage()               {}
func (*JWT) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *JWT) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type AuthURL struct {
	Url string `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
}

func (m *AuthURL) Reset()                    { *m = AuthURL{} }
func (m *AuthURL) String() string            { return proto.CompactTextString(m) }
func (*AuthURL) ProtoMessage()               {}
func (*AuthURL) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *AuthURL) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

type ActivityList struct {
	Activities []*Activity `protobuf:"bytes,1,rep,name=activities" json:"activities,omitempty"`
	NumResults int64       `protobuf:"varint,2,opt,name=num_results,json=numResults" json:"num_results,omitempty"`
}

func (m *ActivityList) Reset()                    { *m = ActivityList{} }
func (m *ActivityList) String() string            { return proto.CompactTextString(m) }
func (*ActivityList) ProtoMessage()               {}
func (*ActivityList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *ActivityList) GetActivities() []*Activity {
	if m != nil {
		return m.Activities
	}
	return nil
}

func (m *ActivityList) GetNumResults() int64 {
	if m != nil {
		return m.NumResults
	}
	return 0
}

type Activity struct {
	Id          string          `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Action      Activity_Action `protobuf:"varint,2,opt,name=action,enum=rpc.Activity_Action" json:"action,omitempty"`
	Description string          `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	Author      *Author         `protobuf:"bytes,4,opt,name=author" json:"author,omitempty"`
	URI         string          `protobuf:"bytes,5,opt,name=URI" json:"URI,omitempty"`
}

func (m *Activity) Reset()                    { *m = Activity{} }
func (m *Activity) String() string            { return proto.CompactTextString(m) }
func (*Activity) ProtoMessage()               {}
func (*Activity) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *Activity) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Activity) GetAction() Activity_Action {
	if m != nil {
		return m.Action
	}
	return Activity_CREATE_ENTRY
}

func (m *Activity) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Activity) GetAuthor() *Author {
	if m != nil {
		return m.Author
	}
	return nil
}

func (m *Activity) GetURI() string {
	if m != nil {
		return m.URI
	}
	return ""
}

func init() {
	proto.RegisterType((*ListEntriesRequest)(nil), "rpc.ListEntriesRequest")
	proto.RegisterType((*GetEntryRequest)(nil), "rpc.GetEntryRequest")
	proto.RegisterType((*CreateEntryRequest)(nil), "rpc.CreateEntryRequest")
	proto.RegisterType((*UpdateEntryRequest)(nil), "rpc.UpdateEntryRequest")
	proto.RegisterType((*EntryList)(nil), "rpc.EntryList")
	proto.RegisterType((*ListEntryCommentsRequest)(nil), "rpc.ListEntryCommentsRequest")
	proto.RegisterType((*CommentList)(nil), "rpc.CommentList")
	proto.RegisterType((*Entry)(nil), "rpc.Entry")
	proto.RegisterType((*Author)(nil), "rpc.Author")
	proto.RegisterType((*CreateEntryCommentRequest)(nil), "rpc.CreateEntryCommentRequest")
	proto.RegisterType((*UpdateEntryCommentRequest)(nil), "rpc.UpdateEntryCommentRequest")
	proto.RegisterType((*Comment)(nil), "rpc.Comment")
	proto.RegisterType((*Tag)(nil), "rpc.Tag")
	proto.RegisterType((*JWT)(nil), "rpc.JWT")
	proto.RegisterType((*AuthURL)(nil), "rpc.AuthURL")
	proto.RegisterType((*ActivityList)(nil), "rpc.ActivityList")
	proto.RegisterType((*Activity)(nil), "rpc.Activity")
	proto.RegisterEnum("rpc.Activity_Action", Activity_Action_name, Activity_Action_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for KobService service

type KobServiceClient interface {
	ListEntries(ctx context.Context, in *ListEntriesRequest, opts ...grpc.CallOption) (*EntryList, error)
	GetEntry(ctx context.Context, in *GetEntryRequest, opts ...grpc.CallOption) (*Entry, error)
	CreateEntry(ctx context.Context, in *CreateEntryRequest, opts ...grpc.CallOption) (*Entry, error)
	UpdateEntry(ctx context.Context, in *UpdateEntryRequest, opts ...grpc.CallOption) (*Entry, error)
	ListEntryComments(ctx context.Context, in *ListEntryCommentsRequest, opts ...grpc.CallOption) (*CommentList, error)
	CreateEntryComment(ctx context.Context, in *CreateEntryCommentRequest, opts ...grpc.CallOption) (*Comment, error)
	UpdateEntryComment(ctx context.Context, in *UpdateEntryCommentRequest, opts ...grpc.CallOption) (*Comment, error)
	CreateJWT(ctx context.Context, in *Author, opts ...grpc.CallOption) (*JWT, error)
	CreateAuthURL(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*AuthURL, error)
	ListActivity(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*ActivityList, error)
}

type kobServiceClient struct {
	cc *grpc.ClientConn
}

func NewKobServiceClient(cc *grpc.ClientConn) KobServiceClient {
	return &kobServiceClient{cc}
}

func (c *kobServiceClient) ListEntries(ctx context.Context, in *ListEntriesRequest, opts ...grpc.CallOption) (*EntryList, error) {
	out := new(EntryList)
	err := grpc.Invoke(ctx, "/rpc.KobService/ListEntries", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kobServiceClient) GetEntry(ctx context.Context, in *GetEntryRequest, opts ...grpc.CallOption) (*Entry, error) {
	out := new(Entry)
	err := grpc.Invoke(ctx, "/rpc.KobService/GetEntry", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kobServiceClient) CreateEntry(ctx context.Context, in *CreateEntryRequest, opts ...grpc.CallOption) (*Entry, error) {
	out := new(Entry)
	err := grpc.Invoke(ctx, "/rpc.KobService/CreateEntry", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kobServiceClient) UpdateEntry(ctx context.Context, in *UpdateEntryRequest, opts ...grpc.CallOption) (*Entry, error) {
	out := new(Entry)
	err := grpc.Invoke(ctx, "/rpc.KobService/UpdateEntry", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kobServiceClient) ListEntryComments(ctx context.Context, in *ListEntryCommentsRequest, opts ...grpc.CallOption) (*CommentList, error) {
	out := new(CommentList)
	err := grpc.Invoke(ctx, "/rpc.KobService/ListEntryComments", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kobServiceClient) CreateEntryComment(ctx context.Context, in *CreateEntryCommentRequest, opts ...grpc.CallOption) (*Comment, error) {
	out := new(Comment)
	err := grpc.Invoke(ctx, "/rpc.KobService/CreateEntryComment", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kobServiceClient) UpdateEntryComment(ctx context.Context, in *UpdateEntryCommentRequest, opts ...grpc.CallOption) (*Comment, error) {
	out := new(Comment)
	err := grpc.Invoke(ctx, "/rpc.KobService/UpdateEntryComment", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kobServiceClient) CreateJWT(ctx context.Context, in *Author, opts ...grpc.CallOption) (*JWT, error) {
	out := new(JWT)
	err := grpc.Invoke(ctx, "/rpc.KobService/CreateJWT", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kobServiceClient) CreateAuthURL(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*AuthURL, error) {
	out := new(AuthURL)
	err := grpc.Invoke(ctx, "/rpc.KobService/CreateAuthURL", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *kobServiceClient) ListActivity(ctx context.Context, in *google_protobuf1.Empty, opts ...grpc.CallOption) (*ActivityList, error) {
	out := new(ActivityList)
	err := grpc.Invoke(ctx, "/rpc.KobService/ListActivity", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for KobService service

type KobServiceServer interface {
	ListEntries(context.Context, *ListEntriesRequest) (*EntryList, error)
	GetEntry(context.Context, *GetEntryRequest) (*Entry, error)
	CreateEntry(context.Context, *CreateEntryRequest) (*Entry, error)
	UpdateEntry(context.Context, *UpdateEntryRequest) (*Entry, error)
	ListEntryComments(context.Context, *ListEntryCommentsRequest) (*CommentList, error)
	CreateEntryComment(context.Context, *CreateEntryCommentRequest) (*Comment, error)
	UpdateEntryComment(context.Context, *UpdateEntryCommentRequest) (*Comment, error)
	CreateJWT(context.Context, *Author) (*JWT, error)
	CreateAuthURL(context.Context, *google_protobuf1.Empty) (*AuthURL, error)
	ListActivity(context.Context, *google_protobuf1.Empty) (*ActivityList, error)
}

func RegisterKobServiceServer(s *grpc.Server, srv KobServiceServer) {
	s.RegisterService(&_KobService_serviceDesc, srv)
}

func _KobService_ListEntries_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListEntriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KobServiceServer).ListEntries(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.KobService/ListEntries",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KobServiceServer).ListEntries(ctx, req.(*ListEntriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KobService_GetEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KobServiceServer).GetEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.KobService/GetEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KobServiceServer).GetEntry(ctx, req.(*GetEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KobService_CreateEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KobServiceServer).CreateEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.KobService/CreateEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KobServiceServer).CreateEntry(ctx, req.(*CreateEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KobService_UpdateEntry_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateEntryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KobServiceServer).UpdateEntry(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.KobService/UpdateEntry",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KobServiceServer).UpdateEntry(ctx, req.(*UpdateEntryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KobService_ListEntryComments_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListEntryCommentsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KobServiceServer).ListEntryComments(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.KobService/ListEntryComments",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KobServiceServer).ListEntryComments(ctx, req.(*ListEntryCommentsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KobService_CreateEntryComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateEntryCommentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KobServiceServer).CreateEntryComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.KobService/CreateEntryComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KobServiceServer).CreateEntryComment(ctx, req.(*CreateEntryCommentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KobService_UpdateEntryComment_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateEntryCommentRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KobServiceServer).UpdateEntryComment(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.KobService/UpdateEntryComment",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KobServiceServer).UpdateEntryComment(ctx, req.(*UpdateEntryCommentRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _KobService_CreateJWT_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Author)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KobServiceServer).CreateJWT(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.KobService/CreateJWT",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KobServiceServer).CreateJWT(ctx, req.(*Author))
	}
	return interceptor(ctx, in, info, handler)
}

func _KobService_CreateAuthURL_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf1.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KobServiceServer).CreateAuthURL(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.KobService/CreateAuthURL",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KobServiceServer).CreateAuthURL(ctx, req.(*google_protobuf1.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _KobService_ListActivity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(google_protobuf1.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KobServiceServer).ListActivity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.KobService/ListActivity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KobServiceServer).ListActivity(ctx, req.(*google_protobuf1.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _KobService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.KobService",
	HandlerType: (*KobServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListEntries",
			Handler:    _KobService_ListEntries_Handler,
		},
		{
			MethodName: "GetEntry",
			Handler:    _KobService_GetEntry_Handler,
		},
		{
			MethodName: "CreateEntry",
			Handler:    _KobService_CreateEntry_Handler,
		},
		{
			MethodName: "UpdateEntry",
			Handler:    _KobService_UpdateEntry_Handler,
		},
		{
			MethodName: "ListEntryComments",
			Handler:    _KobService_ListEntryComments_Handler,
		},
		{
			MethodName: "CreateEntryComment",
			Handler:    _KobService_CreateEntryComment_Handler,
		},
		{
			MethodName: "UpdateEntryComment",
			Handler:    _KobService_UpdateEntryComment_Handler,
		},
		{
			MethodName: "CreateJWT",
			Handler:    _KobService_CreateJWT_Handler,
		},
		{
			MethodName: "CreateAuthURL",
			Handler:    _KobService_CreateAuthURL_Handler,
		},
		{
			MethodName: "ListActivity",
			Handler:    _KobService_ListActivity_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc.proto",
}

func init() { proto.RegisterFile("rpc.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 1042 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x56, 0xdd, 0x8e, 0xdb, 0x44,
	0x14, 0x26, 0xf1, 0xae, 0x13, 0x1f, 0x67, 0x97, 0x74, 0xa8, 0x5a, 0x27, 0xdb, 0x9f, 0xac, 0xf9,
	0x51, 0x24, 0x4a, 0x22, 0x05, 0xa1, 0x5e, 0x2f, 0xdb, 0x50, 0xb6, 0xac, 0xaa, 0x95, 0xc9, 0x52,
	0x71, 0x43, 0x70, 0xec, 0x59, 0x33, 0xd4, 0xb1, 0x8d, 0x3d, 0x5e, 0x14, 0xaa, 0xde, 0x70, 0x83,
	0xc4, 0x2d, 0x4f, 0xc2, 0x93, 0x80, 0xc4, 0x2b, 0xf0, 0x20, 0x68, 0xce, 0xcc, 0xec, 0xda, 0x49,
	0x43, 0x2b, 0x21, 0x71, 0x37, 0xe7, 0x67, 0xce, 0x77, 0x7e, 0xe7, 0x0c, 0x58, 0x79, 0x16, 0x8c,
	0xb2, 0x3c, 0xe5, 0x29, 0x31, 0xf2, 0x2c, 0xe8, 0xdf, 0x89, 0xd2, 0x34, 0x8a, 0xe9, 0xd8, 0xcf,
	0xd8, 0xd8, 0x4f, 0x92, 0x94, 0xfb, 0x9c, 0xa5, 0x49, 0x21, 0x55, 0xfa, 0x07, 0x4a, 0x8a, 0xd4,
	0xa2, 0xbc, 0x18, 0xd3, 0x65, 0xc6, 0x57, 0x52, 0xe8, 0x86, 0x40, 0x4e, 0x59, 0xc1, 0xa7, 0x09,
	0xcf, 0x19, 0x2d, 0x3c, 0xfa, 0x43, 0x49, 0x0b, 0x4e, 0x08, 0xec, 0x64, 0x7e, 0x44, 0x9d, 0xc6,
	0xa0, 0x31, 0x34, 0x3c, 0x3c, 0x93, 0x01, 0x74, 0x92, 0x72, 0x39, 0xcf, 0x68, 0x3e, 0x47, 0x59,
	0x13, 0x65, 0x90, 0x94, 0xcb, 0x33, 0x9a, 0x9f, 0x09, 0x0d, 0x07, 0x5a, 0xcf, 0xe9, 0xea, 0xc7,
	0x34, 0x0f, 0x1d, 0x63, 0xd0, 0x18, 0x5a, 0x9e, 0x26, 0xdd, 0x43, 0x78, 0xfb, 0x31, 0x45, 0x90,
	0x95, 0x86, 0xd8, 0x87, 0x26, 0x0b, 0x15, 0x40, 0x93, 0x85, 0xee, 0x4f, 0x40, 0x8e, 0x73, 0xea,
	0x73, 0x5a, 0xd3, 0xba, 0x09, 0xbb, 0x9c, 0xf1, 0x58, 0xa2, 0x59, 0x9e, 0x24, 0x04, 0x50, 0x90,
	0x26, 0x9c, 0x26, 0x5c, 0x03, 0x29, 0x92, 0x1c, 0x80, 0xe5, 0x97, 0xfc, 0xbb, 0x34, 0x9f, 0xb3,
	0xd0, 0xd9, 0x41, 0x59, 0x5b, 0x32, 0x4e, 0x42, 0x72, 0x1b, 0x5a, 0xdc, 0x8f, 0xe6, 0x2c, 0x2c,
	0x9c, 0xdd, 0x81, 0x31, 0xb4, 0x3c, 0x93, 0xfb, 0xd1, 0x49, 0x58, 0xb8, 0xbf, 0x36, 0x80, 0x9c,
	0x67, 0xe1, 0x3a, 0xf8, 0x9a, 0x8b, 0xff, 0x93, 0x33, 0x1e, 0x58, 0xe8, 0x85, 0x28, 0x0b, 0x79,
	0x0f, 0x5a, 0x54, 0x96, 0xc6, 0x69, 0x0c, 0x8c, 0xa1, 0x3d, 0x81, 0x91, 0xa8, 0xbd, 0x74, 0x53,
	0x8b, 0xc8, 0x7d, 0xb0, 0x45, 0x69, 0x72, 0x5a, 0x94, 0x31, 0x2f, 0x2a, 0x95, 0xf1, 0x24, 0xc7,
	0xfd, 0x04, 0x1c, 0x5d, 0xe5, 0xd5, 0x71, 0xba, 0x5c, 0xd2, 0x84, 0x5f, 0xd5, 0xba, 0x07, 0x6d,
	0x61, 0x67, 0x35, 0x57, 0xb1, 0x5a, 0xd2, 0xee, 0xea, 0x24, 0x74, 0x1f, 0x82, 0xad, 0xb4, 0xd1,
	0x99, 0x21, 0xb4, 0x03, 0x75, 0x59, 0x79, 0xd3, 0x41, 0x6f, 0x94, 0x8e, 0x77, 0x25, 0x75, 0xff,
	0x6c, 0xc0, 0x2e, 0x82, 0xfd, 0xe7, 0x1c, 0xbe, 0x0b, 0xa6, 0x4c, 0x19, 0x26, 0xd0, 0x9e, 0xd8,
	0x88, 0x78, 0x84, 0x2c, 0x4f, 0x89, 0xc8, 0x1d, 0xd8, 0xe1, 0x7e, 0x24, 0x13, 0x69, 0x4f, 0xda,
	0xa8, 0x32, 0xf3, 0x23, 0x0f, 0xb9, 0xe4, 0x10, 0x3a, 0x01, 0x76, 0x56, 0x38, 0x17, 0x25, 0x76,
	0x4c, 0x44, 0xb0, 0x15, 0xef, 0x91, 0xcf, 0xa9, 0x50, 0x29, 0xb1, 0xfe, 0x4a, 0xa5, 0x25, 0x55,
	0x14, 0x4f, 0xa8, 0xb8, 0xbf, 0x34, 0xc1, 0x94, 0xb0, 0x1b, 0x31, 0x75, 0xc1, 0x28, 0xca, 0x85,
	0x8a, 0x48, 0x1c, 0xc5, 0xfc, 0x24, 0xfe, 0x92, 0xaa, 0x60, 0xf0, 0x4c, 0xee, 0x02, 0x44, 0xec,
	0x92, 0x26, 0x73, 0x94, 0xc8, 0x76, 0xb0, 0x90, 0xf3, 0x54, 0x88, 0xef, 0x83, 0x7d, 0xe1, 0x2f,
	0x59, 0xbc, 0x92, 0xf2, 0x5d, 0x94, 0x83, 0x64, 0xa1, 0x82, 0x03, 0xad, 0x2c, 0x4f, 0x2f, 0x58,
	0xac, 0x23, 0xd0, 0x24, 0x4a, 0x58, 0xc0, 0xcb, 0x5c, 0x3b, 0xae, 0x49, 0x91, 0x6d, 0xba, 0xf4,
	0x59, 0xec, 0xb4, 0x65, 0xb6, 0x91, 0x20, 0xef, 0xc3, 0x3e, 0x1e, 0xe6, 0x97, 0x34, 0x67, 0x17,
	0x8c, 0x86, 0x8e, 0x85, 0xe2, 0x3d, 0xe4, 0x7e, 0xa5, 0x98, 0xe4, 0x16, 0x98, 0x11, 0x4d, 0x42,
	0x9a, 0x3b, 0x80, 0x62, 0x45, 0xb9, 0x4b, 0xe8, 0x55, 0x26, 0x55, 0x17, 0xff, 0xb5, 0xdd, 0x54,
	0x1f, 0x87, 0xe6, 0xda, 0x38, 0x6c, 0xed, 0x00, 0xf7, 0x5b, 0xe8, 0x55, 0x66, 0xf3, 0xcd, 0xe1,
	0x64, 0x95, 0x24, 0x8e, 0xa8, 0xd2, 0x76, 0x84, 0x17, 0xd0, 0x52, 0x66, 0x37, 0x4a, 0x7b, 0xdd,
	0x7e, 0xcd, 0xed, 0xed, 0xb7, 0xde, 0x60, 0xc6, 0x66, 0x83, 0x55, 0xc0, 0x77, 0xea, 0xe0, 0x1f,
	0x82, 0x31, 0xf3, 0xa3, 0x57, 0xcd, 0x49, 0xec, 0x2f, 0x68, 0xac, 0xe7, 0x04, 0x09, 0xb7, 0x07,
	0xc6, 0x93, 0x67, 0x33, 0xd1, 0x5e, 0x41, 0x1a, 0x52, 0x15, 0x31, 0x9e, 0xdd, 0x03, 0x68, 0x09,
	0xb7, 0xce, 0xbd, 0x53, 0xd1, 0x8f, 0x65, 0x1e, 0x2b, 0xa9, 0x38, 0xba, 0xdf, 0x40, 0xe7, 0x28,
	0xe0, 0xec, 0x92, 0x71, 0xf9, 0xac, 0x7c, 0x04, 0xe0, 0x4b, 0xfa, 0xfa, 0x65, 0xd9, 0x93, 0xa1,
	0x29, 0x35, 0xaf, 0xa2, 0xf0, 0xfa, 0xf7, 0xe5, 0x8f, 0x06, 0xb4, 0xf5, 0xcd, 0x4a, 0x28, 0x32,
	0xf1, 0x0f, 0xc0, 0x14, 0xb6, 0xd2, 0x04, 0x2f, 0xee, 0x4f, 0x6e, 0xd6, 0x80, 0xf0, 0x90, 0x26,
	0x9e, 0xd2, 0x21, 0x03, 0xb0, 0x43, 0x5a, 0x04, 0x39, 0xcb, 0xf0, 0x8a, 0xca, 0x65, 0x85, 0xf5,
	0x66, 0x4f, 0x42, 0x17, 0x8c, 0x73, 0xef, 0x44, 0x8d, 0x91, 0x38, 0xba, 0x0f, 0xc0, 0x94, 0x50,
	0xa4, 0x0b, 0x9d, 0x63, 0x6f, 0x7a, 0x34, 0x9b, 0xce, 0xa7, 0x4f, 0x67, 0xde, 0xd7, 0xdd, 0xb7,
	0x04, 0xe7, 0xfc, 0xec, 0xd1, 0x35, 0xa7, 0x31, 0xf9, 0xdd, 0x04, 0xf8, 0x22, 0x5d, 0x7c, 0x49,
	0xf3, 0x4b, 0x16, 0x50, 0xf2, 0x19, 0xd8, 0x95, 0x35, 0x49, 0x6e, 0x23, 0xe4, 0xe6, 0xe2, 0xec,
	0xef, 0x5f, 0x3f, 0xcf, 0x42, 0xea, 0xee, 0xff, 0xfc, 0xd7, 0xdf, 0xbf, 0x35, 0xdb, 0xc4, 0x1c,
	0x63, 0x5b, 0x92, 0x23, 0x68, 0xeb, 0x45, 0x48, 0x64, 0x1e, 0xd6, 0xf6, 0x62, 0xbf, 0xf2, 0xc0,
	0xbb, 0xef, 0xe0, 0xed, 0x3d, 0x62, 0xcb, 0xdb, 0xe3, 0x17, 0x2c, 0x7c, 0x49, 0x3e, 0x05, 0xbb,
	0x32, 0x7e, 0xca, 0x95, 0xcd, 0xd5, 0x59, 0x33, 0xa4, 0xdc, 0x70, 0xb5, 0x1b, 0x8f, 0xc1, 0xae,
	0xcc, 0x94, 0xb2, 0xb1, 0xb9, 0x01, 0x5f, 0xe5, 0x4c, 0xbf, 0xe6, 0x4c, 0x04, 0x37, 0x36, 0x16,
	0x0b, 0xb9, 0x5b, 0xcb, 0xce, 0xfa, 0xc2, 0xe9, 0x77, 0xab, 0x4b, 0x03, 0xb3, 0x74, 0x88, 0xa6,
	0x0f, 0x48, 0x4f, 0x9b, 0xd6, 0x33, 0xfd, 0x72, 0xac, 0x56, 0x0a, 0xa1, 0xb5, 0xef, 0x81, 0x1e,
	0xd7, 0x7b, 0xeb, 0xc1, 0xd7, 0x9f, 0x87, 0x7e, 0x6d, 0x3f, 0x69, 0x18, 0xf7, 0x5f, 0x60, 0xbe,
	0xaf, 0x7d, 0x04, 0xea, 0x30, 0x5b, 0x5f, 0xa1, 0x35, 0x98, 0x0f, 0x10, 0x66, 0xd0, 0xbf, 0xb7,
	0x15, 0x46, 0xe6, 0xee, 0x21, 0x58, 0xd2, 0x73, 0x31, 0xd2, 0xd5, 0x26, 0xee, 0xcb, 0x0d, 0xf6,
	0xe4, 0xd9, 0xac, 0xd2, 0x01, 0xa2, 0xaf, 0xc7, 0x3c, 0x7d, 0x4e, 0x13, 0xf2, 0x39, 0xec, 0xc9,
	0x8b, 0x7a, 0xe0, 0x6f, 0x8d, 0xe4, 0x17, 0x6f, 0xa4, 0xbf, 0x78, 0xa3, 0xa9, 0xf8, 0xe2, 0x29,
	0xbf, 0x94, 0x96, 0x7b, 0x03, 0x6d, 0xd9, 0xc4, 0x92, 0xb6, 0xca, 0x3c, 0x26, 0xa7, 0xd0, 0x11,
	0x05, 0xb8, 0x1a, 0xdd, 0x6d, 0x86, 0x6e, 0xd4, 0x46, 0x16, 0x6b, 0x56, 0xb1, 0xa6, 0xd8, 0x0b,
	0x13, 0x6f, 0x7d, 0xfc, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x9a, 0x9e, 0xf9, 0x72, 0x9f, 0x0a,
	0x00, 0x00,
}
